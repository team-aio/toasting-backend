name: Deploy Containers

on:
  push:
    branches: [ "main" ]

jobs:
  upload-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # Gradle 권한 변경
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Gradle 캐싱
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build JAR
        run: ./gradlew clean build --no-daemon

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile_Spring
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/toasting-spring:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/toasting-spring:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/toasting-spring:buildcache,mode=max

  build-and-deploy:
    needs: upload-images
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_EC2_HOST }}
          username: ${{ secrets.PROD_EC2_USERNAME }}
          key: ${{ secrets.PROD_EC2_KEY }}
          port: ${{ secrets.PROD_EC2_PORT }}
          script: |
            sudo docker stop toasting-spring || true
            sudo docker rm toasting-spring || true
            
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/toasting-spring:latest
            
            sudo docker run -d \
              --name toasting-spring \
              --restart always \
              --network toasting \
              -p 8000:8000 \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
              -e SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
              -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
              -e SPRING_DATASOURCE_HIKARI_SCHEMA=${{ secrets.SPRING_DATASOURCE_HIKARI_SCHEMA }} \
              -e SPRING_JWT_SECRET=${{ secrets.SPRING_JWT_SECRET }} \
              ${{ secrets.DOCKER_HUB_USERNAME }}/toasting-spring:latest
            
            # Clean up unused images
            sudo docker image prune -a -f
